{"version":3,"sources":["components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/Auth/Login.js","components/Auth/Register.js","components/layout/Alert.js","components/dashboard/dashboardActions.js","components/layout/spinner.js","actions/profile.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/dashboard.js","components/routing/Privaterouting.js","components/profile-form/CreateProfile.js","components/profile-form/EditProfile.js","components/profile-form/AddExperience.js","components/profile-form/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeOut","dispatch","id","uuid","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","login","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","formData","setformData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","minLength","register","password2","alerts","alert","length","map","key","dashboardActions","class","src","spinner","style","width","margin","display","alt","getCurrentProfile","statusText","status","createProfile","history","edit","push","console","log","deleteExperience","delete","experience","experiences","exp","company","title","format","from","_id","deleteEducation","education","educations","edu","school","degree","fieldofstudy","profile","deleteAccount","window","confirm","ACCOUNT_DELETED","user","useEffect","Component","component","rest","render","props","withRouter","website","location","bio","githubusername","skills","youtube","facebook","twitter","instagram","linkedin","setFormData","displaySocialInputs","toggleSocialInputs","join","addExperience","put","current","description","toDateDisabled","toggleDisabled","required","checked","disabled","cols","rows","addEducation","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","ProfileTop","social","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfilebyId","userId","match","params","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aa2729d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.d1e59479.gif\";","import { v4 as uuid } from \"uuid\";\r\nimport { SET_ALERT, REMOVE_ALERT } from \"./types\";\r\n\r\nexport const setAlert = (msg, alertType, timeOut = 5000) => (dispatch) => {\r\n  const id = uuid();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n\r\n  setTimeout(\r\n    () =>\r\n      dispatch({\r\n        type: REMOVE_ALERT,\r\n        payload: id,\r\n      }),\r\n    timeOut\r\n  );\r\n};\r\n","export const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const GET_PROFILE = \"GET_PROFILE\";\r\nexport const GET_PROFILES = \"GET_PROFILES\";\r\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\r\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\r\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\r\nexport const ACCOUNT_DELETED = \"ACCOUNT_DELETED\";\r\nexport const GET_REPOS = \"GET_REPOS\";\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_POST = \"GET_POST\";\r\nexport const POST_ERROR = \"POST_ERROR\";\r\nexport const UPDATE_LIKES = \"UPDATE_LIKES\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const REMOVE_COMMENT = \"REMOVE_COMMENT\";\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"x-auth-token\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from \"./types\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n//Load user\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get(\"/api/auth\");\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n//Register user\r\n\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ name, email, password });\r\n  try {\r\n    const res = await axios.post(\"api/users\", body, config);\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//Login user\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ email, password });\r\n  try {\r\n    const res = await axios.post(\"api/auth\", body, config);\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//LOGOUT\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n  dispatch({\r\n    type: CLEAR_PROFILE,\r\n  });\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport propTypes from \"prop-types\";\r\nimport { logout } from \"../../actions/auth\";\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/profiles\">Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/posts\">Posts</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/dashboard\">\r\n          <i className=\"fas fa-user\" />{\" \"}\r\n          <span className=\"hide-sm\">Dashboard</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout} href=\"#!\">\r\n          <i className=\"fas fa-sign-out-alt\" />{\" \"}\r\n          <span className=\"hide-sm\">Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/profiles\">Developers</Link>\r\n      </li>\r\n\r\n      <li>\r\n        <Link to=\"/register\">Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/login\">Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n  return (\r\n    <nav className=\"navbar bg-dark\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          <i className=\"fas fa-code\"></i> DevConnector\r\n        </Link>\r\n      </h1>\r\n      {!loading && (\r\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logout: propTypes.func.isRequired,\r\n  auth: propTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Landing = ({ isAuthenticated }) => {\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <section className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"landing-inner\">\r\n          <h1 className=\"x-large\">Developer Connector</h1>\r\n          <p className=\"lead\">\r\n            Create a developer profile/portfolio, share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div className=\"buttons\">\r\n            <Link to=\"/register\" className=\"btn btn-primary\">\r\n              Sign Up\r\n            </Link>\r\n            <Link to=\"/login\" className=\"btn btn-light\">\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToprops = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToprops)(Landing);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport propTypes from \"prop-types\";\r\n\r\nexport const Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setformData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setformData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  //Redirect if logged in\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <section className=\"container\">\r\n        <h1 className=\"large text-primary\">Sign In</h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-user\"></i> Sign Into Your Account\r\n        </p>\r\n        <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email Address\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              minLength=\"6\"\r\n              value={password}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n        </form>\r\n        <p className=\"my-1\">\r\n          Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n        </p>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: propTypes.func.isRequired,\r\n  isAuthenticated: propTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { register } from \"../../actions/auth\";\r\nimport propTypes from \"prop-types\";\r\n\r\nexport const Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setformData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setformData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert(\"Password do not match\", \"danger\");\r\n    } else {\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <section className=\"container\">\r\n        <h1 className=\"large text-primary\">Sign Up</h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-user\"></i> Create Your Account\r\n        </p>\r\n        <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              name=\"name\"\r\n              // required\r\n              value={name}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email Address\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <small className=\"form-text\">\r\n              This site uses Gravatar so if you want a profile image, use a\r\n              Gravatar email\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              //  minLength=\"6\"\r\n              value={password}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              name=\"password2\"\r\n              //  minLength=\"6\"\r\n              value={password2}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n        </form>\r\n        <p className=\"my-1\">\r\n          Already have an account? <Link to=\"/login\">Sign In</Link>\r\n        </p>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: propTypes.func.isRequired,\r\n  register: propTypes.func.isRequired,\r\n  isAuthenticated: propTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const dashboardActions = () => {\r\n  return (\r\n    <div class=\"dash-buttons\">\r\n      <Link to=\"/edit-profile\" class=\"btn btn-light\">\r\n        <i class=\"fas fa-user-circle text-primary\"></i> Edit Profile\r\n      </Link>\r\n      <Link to=\"/add-experience\" class=\"btn btn-light\">\r\n        <i class=\"fab fa-black-tie text-primary\"></i> Add Experience\r\n      </Link>\r\n      <Link to=\"/add-education\" class=\"btn btn-light\">\r\n        <i class=\"fas fa-graduation-cap text-primary\"></i> Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default dashboardActions;\r\n","import React, { Fragment } from \"react\";\r\nimport spinner from \"./spinner.gif\";\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\r\n      alt=\"Loading...\"\r\n    />\r\n  </Fragment>\r\n);\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  CLEAR_PROFILE,\r\n  GET_REPOS,\r\n} from \"./types\";\r\n\r\n//Get the current user profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/profile/me\");\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//Get all profiles\r\n\r\nexport const getProfiles = () => async (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_PROFILE,\r\n  });\r\n  try {\r\n    const res = await axios.get(\"/api/profile\");\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//Get profile by ID\r\n\r\nexport const getProfilebyId = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//Get Github repos\r\n\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/github/${username}`);\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n// Create or update profile\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const res = await axios.post(\"/api/profile\", formData, config);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\r\n    if (!edit) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    console.log(errors);\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Add Experirencs\r\n\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  console.log(formData);\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(\"Experience added\", \"success\"));\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Add Education\r\n\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const res = await axios.put(\"/api/profile/education\", formData, config);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(\"Education added\", \"success\"));\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Delete an Experience\r\n\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Delete an Education\r\n\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Education Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Delete account and profile\r\n\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  if (window.confirm(\"Are you sure? This can NOT be undone!!!\")) {\r\n    try {\r\n      await axios.delete(\"/api/profile\");\r\n\r\n      dispatch({\r\n        type: CLEAR_PROFILE,\r\n        ACCOUNT_DELETED,\r\n      });\r\n\r\n      dispatch(setAlert(\"Your account has been permanently deleted\"));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport { deleteExperience } from \"../../actions/profile\";\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n  const experiences = experience.map((exp) => (\r\n    <tr key={exp.id}>\r\n      <td>{exp.company}</td>\r\n      <td className=\"hide-sm\">{exp.title}</td>\r\n      <td>\r\n        <Moment format=\"YYYY/MM/DD\">{exp.from}</Moment> -{\" \"}\r\n        {exp.to === null ? (\r\n          \"Now\"\r\n        ) : (\r\n          <Moment format=\"YYYY/MM/DD\">{exp.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteExperience(exp._id)}\r\n          className=\"btn btn-danger\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"my-2\">Experience Credentials</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th className=\"hide-sm\">Title</th>\r\n            <th className=\"hide-sm\">Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{experiences}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport { deleteEducation } from \"../../actions/profile\";\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n  const educations = education.map((edu) => (\r\n    <tr key={edu.id}>\r\n      <td>{edu.school}</td>\r\n      <td className=\"hide-sm\">{edu.degree}</td>\r\n      <td className=\"hide-sm\">{edu.fieldofstudy}</td>\r\n      <td>\r\n        <Moment format=\"YYYY/MM/DD\">{edu.from}</Moment> -{\" \"}\r\n        {edu.to === null ? (\r\n          \"Now\"\r\n        ) : (\r\n          <Moment format=\"YYYY/MM/DD\">{edu.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteEducation(edu._id)}\r\n          className=\"btn btn-danger\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"my-2\">Education Details</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>School</th>\r\n            <th className=\"hide-sm\">Degree</th>\r\n            <th className=\"hide-sm\">Fiels of Study</th>\r\n            <th className=\"hide-sm\">Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{educations}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DashboardActions from \"./dashboardActions\";\r\nimport propTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/spinner\";\r\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profile\";\r\nimport Experience from \"./Experience\";\r\nimport Education from \"./Education\";\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Dashboard</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" />\r\n        welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n          <div className=\"my-2\">\r\n            <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n              <i className=\"fas fs-user-minus\"></i>Delete my Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not yet setup a profile, please add some info</p>\r\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: propTypes.func.isRequired,\r\n  auth: propTypes.object.isRequired,\r\n  profile: propTypes.object.isRequired,\r\n  deleteAccount: propTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport propTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to=\"/login\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: propTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProfile } from \"../../actions/profile\";\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    bio: \"\",\r\n    status: \"\",\r\n    githubusername: \"\",\r\n    skills: \"\",\r\n    youtube: \"\",\r\n    facebook: \"\",\r\n    twitter: \"\",\r\n    instagram: \"\",\r\n    linkedin: \"\",\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    bio,\r\n    status,\r\n    githubusername,\r\n    skills,\r\n    youtube,\r\n    facebook,\r\n    twitter,\r\n    instagram,\r\n    linkedin,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    bio: \"\",\r\n    status: \"\",\r\n    githubusername: \"\",\r\n    skills: \"\",\r\n    youtube: \"\",\r\n    facebook: \"\",\r\n    twitter: \"\",\r\n    instagram: \"\",\r\n    linkedin: \"\",\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? \"\" : profile.company,\r\n      website: loading || !profile.website ? \"\" : profile.website,\r\n      location: loading || !profile.location ? \"\" : profile.location,\r\n      status: loading || !profile.status ? \"\" : profile.status,\r\n      skills: loading || !profile.skills ? \"\" : profile.skills.join(\",\"),\r\n      githubusername:\r\n        loading || !profile.githubusername ? \"\" : profile.githubusername,\r\n      bio: loading || !profile.bio ? \"\" : profile.bio,\r\n      twitter: loading || !profile.twitter ? \"\" : profile.twitter,\r\n      facebook: loading || !profile.facebook ? \"\" : profile.facebook,\r\n      linkedin: loading || !profile.linkedin ? \"\" : profile.linkedin,\r\n      youtube: loading || !profile.youtube ? \"\" : profile.youtube,\r\n      instagram: loading || !profile.instagram ? \"\" : profile.instagram,\r\n    });\r\n  }, [loading, getCurrentProfile]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    bio,\r\n    status,\r\n    githubusername,\r\n    skills,\r\n    youtube,\r\n    facebook,\r\n    twitter,\r\n    instagram,\r\n    linkedin,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addExperience } from \"../../actions/profile\";\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    title: \"\",\r\n    location: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    current: false,\r\n    description: \"\",\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Add An Experience</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\"></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addExperience(formData, history);\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Job Title\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"from\"\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"current\"\r\n              checked={current}\r\n              value=\"{current}\"\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{\" \"}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"to\"\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? \"disabled\" : \"\"}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Job Description\"\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addEducation } from \"../../actions/profile\";\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: \"\",\r\n    degree: \"\",\r\n    fieldofstudy: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    current: false,\r\n    description: \"\",\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Add Your Education</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\"></i> Add any school or bootcamp that\r\n        you have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addEducation(formData, history);\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* School or Bootcamp\"\r\n            name=\"school\"\r\n            value={school}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Degree\"\r\n            name=\"degree\"\r\n            value={degree}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Fieldofstudy\"\r\n            name=\"fieldofstudy\"\r\n            value={fieldofstudy}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"from\"\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"current\"\r\n              checked={current}\r\n              value=\"{current}\"\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{\" \"}\r\n            Current Education\r\n          </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"to\"\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? \"disabled\" : \"\"}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Program Description\"\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    user: { _id, name, avatar },\r\n    status,\r\n    company,\r\n    location,\r\n    skills,\r\n  },\r\n}) => {\r\n  return (\r\n    <div className=\"profile bg-light\">\r\n      <img src={avatar} alt=\"\" className=\"round-img\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>\r\n          {status}\r\n          {company && <span> at {company}</span>}\r\n          <p className=\"my-1\">{location && <span>{location}</span>}</p>\r\n          <Link to={`/profile/${_id}`} className=\"btn btn-primary\">\r\n            View Profile\r\n          </Link>\r\n        </p>\r\n      </div>\r\n      <ul>\r\n        {skills.slice(0, 4).map((skill, index) => (\r\n          <li key={index} className=\"text-primary\">\r\n            <i className=\"fas fa-check\"></i>\r\n            {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileItem;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport Spinner from \"../layout/spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProfiles } from \"../../actions/profile\";\r\n\r\nimport ProfileItem from \"./ProfileItem\";\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className=\"large text-primary\">Developers</h1>\r\n          <p className=\"lead\">\r\n            <i className=\"fab fa-connectdevelop\"></i> Browase and connect with\r\n            developers\r\n          </p>\r\n          <div className=\"profiles\">\r\n            {profiles.length > 0 ? (\r\n              profiles.map((profile) => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4>No profiles found</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar },\r\n  },\r\n}) => {\r\n  return (\r\n    <div className=\"profile-top bg-primary p-2\">\r\n      <img className=\"round-img my-1\" src={avatar} alt=\"\" />\r\n      <h1 className=\"large\">{name}</h1>\r\n      <p className=\"lead\">\r\n        {status} {company && <span> at {company} </span>}\r\n      </p>\r\n      <p>{location && <span>{location}</span>}</p>\r\n      <div className=\"icons my-1\">\r\n        {website && (\r\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fas fa-globe fa-2x\"></i>\r\n          </a>\r\n        )}\r\n        {social && social.twitter && (\r\n          <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-twitter fa-2x\"></i>\r\n          </a>\r\n        )}\r\n\r\n        {social && social.facebook && (\r\n          <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-facebook fa-2x\"></i>\r\n          </a>\r\n        )}\r\n\r\n        {social && social.linkedin && (\r\n          <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-linkedin fa-2x\"></i>\r\n          </a>\r\n        )}\r\n\r\n        {social && social.facebook && (\r\n          <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-youtube fa-2x\"></i>\r\n          </a>\r\n        )}\r\n\r\n        {social && social.instagram && (\r\n          <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-instagram fa-2x\"></i>\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileTop;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProfileAbout = ({\r\n  profile: {\r\n    bio,\r\n    skills,\r\n    user: { name },\r\n  },\r\n}) => {\r\n  return (\r\n    <div className=\"profile-about bg-light p-2\">\r\n      {bio && (\r\n        <Fragment>\r\n          <h2 className=\"text-primary\">{name.trim().split(\" \")[0]}'s Bio</h2>\r\n          <p>{bio}</p>\r\n          <div className=\"line\"></div>\r\n        </Fragment>\r\n      )}\r\n\r\n      <h2 className=\"text-primary\">Skill Set</h2>\r\n      <div className=\"skills\"></div>\r\n      {skills.map((skill, index) => (\r\n        <div key={index} className=\"p-1\">\r\n          <i className=\"fas fa-check\"></i>\r\n          {skill}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst ProfileExperience = ({\r\n  experience: { company, title, location, current, to, from, description },\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-dark\">{company}</h3>\r\n      <p>\r\n        <Moment format=\"YYYY/MM/DD\">{from}</Moment> -{\" \"}\r\n        {!to ? \"Now\" : <Moment format=\"YYYY/MM/DD\">{to}</Moment>}\r\n      </p>\r\n      <p>\r\n        <strong>Position: </strong>\r\n        {title}\r\n      </p>\r\n      <p>\r\n        <strong>description: </strong> {description}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst ProfileEducation = ({\r\n  education: { school, degree, fieldofstudy, current, to, from, description },\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-dark\">{school}</h3>\r\n      <p>\r\n        <Moment format=\"YYYY/MM/DD\">{from}</Moment> -{\" \"}\r\n        {!to ? \"Now\" : <Moment format=\"YYYY/MM/DD\">{to}</Moment>}\r\n      </p>\r\n      <p>\r\n        <strong>Degree: </strong>\r\n        {degree}\r\n      </p>\r\n      <p>\r\n        <strong>Field Of Study: </strong>\r\n        {fieldofstudy}\r\n      </p>\r\n      <p>\r\n        <strong>Description: </strong> {description}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/spinner\";\r\nimport { getGithubRepos } from \"../../actions/profile\";\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos]);\r\n  return (\r\n    <div>\r\n      <div className=\"profile-github\">\r\n        <h2 className=\"text-primary my-1\">Github Repos</h2>\r\n        {repos === null ? (\r\n          <Spinner />\r\n        ) : (\r\n          repos.map((repo) => (\r\n            <div key={repo._id} className=\"repo bg-white p-1 my-1\">\r\n              <div>\r\n                <h4>\r\n                  <a\r\n                    href={repo.html_url}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    {repo.name}\r\n                  </a>\r\n                </h4>\r\n                <p>{repo.description}</p>\r\n              </div>\r\n              <div>\r\n                <ul>\r\n                  <li className=\"badge badge-primary\">\r\n                    Stars:{repo.stargazers_count}\r\n                  </li>\r\n                  <li className=\"badge badge-dark\">\r\n                    Watchers:{repo.watchers_count}\r\n                  </li>\r\n                  <li className=\"badge badge-light\">\r\n                    Forks:{repo.forks_count}\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../layout/spinner\";\r\nimport ProfileTop from \"./ProfileTop\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileExperience from \"./ProfileExperience\";\r\nimport ProfileEducation from \"./ProfileEducation\";\r\nimport ProfileGithub from \"./ProfileGithub\";\r\nimport { getProfilebyId } from \"../../actions/profile\";\r\n\r\nconst Profile = ({\r\n  getProfilebyId,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match,\r\n}) => {\r\n  useEffect(() => {\r\n    getProfilebyId(match.params.id);\r\n  }, [getProfilebyId, match.params.id]);\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to=\"/profiles\" className=\"btn btn-light\">\r\n            Back To Profiles\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to=\"/edit-profile\" className=\"btn btn-dark\">\r\n                Edit Profile\r\n              </Link>\r\n            )}\r\n          <div className=\"profile-grid-my1\">\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n            <div className=\"profile-exp bg-white p-2\">\r\n              <h2 className=\"text-primary\">Experience</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map((experience) => (\r\n                    <ProfileExperience\r\n                      key={experience._id}\r\n                      experience={experience}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No experience credentials</h4>\r\n              )}\r\n            </div>\r\n            <div className=\"profile-edu bg-white p-2\">\r\n              <h2 className=\"text-primary\">Education</h2>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map((education) => (\r\n                    <ProfileEducation\r\n                      key={education._id}\r\n                      education={education}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No education credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            {profile.githubusername && (\r\n              <ProfileGithub username={profile.githubusername} />\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfilebyId: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfilebyId })(Profile);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions,\r\n}) => (\r\n  <div class=\"post bg-white p-1 my-1\">\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img class=\"round-img\" src={avatar} alt=\"\" />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p class=\"my-1\">{text}</p>\r\n      <p class=\"post-date\">\r\n        Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n      </p>\r\n\r\n      {showActions && (\r\n        <Fragment>\r\n          <button\r\n            onClick={(e) => addLike(_id)}\r\n            type=\"button\"\r\n            class=\"btn btn-light\"\r\n          >\r\n            <i class=\"fas fa-thumbs-up\" />{\" \"}\r\n            <span> {likes.length > 0 && <span>{likes.length}</span>}</span>\r\n          </button>\r\n          <button\r\n            onClick={(e) => removeLike(_id)}\r\n            type=\"button\"\r\n            class=\"btn btn-light\"\r\n          >\r\n            <i class=\"fas fa-thumbs-down\"></i>\r\n          </button>\r\n          <Link to={`/posts/${_id}`} class=\"btn btn-primary\">\r\n            Discussion{\" \"}\r\n            {comments.length > 0 && (\r\n              <span class=\"comment-count\">{comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={(e) => deletePost(_id)}\r\n              type=\"button\"\r\n              class=\"btn btn-danger\"\r\n            >\r\n              <i class=\"fas fa-times\"></i>\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from \"./types\";\r\n\r\n//Get posts\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/posts\");\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//add like\r\n\r\nexport const addLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${id}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Remove like\r\n\r\nexport const removeLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${id}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//DELETE post\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/posts/${id}`);\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id,\r\n    });\r\n\r\n    dispatch(setAlert(\"Post Removed\", \"Success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//ADD post\r\n\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(\"/api/posts/\", formData, config);\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Post Created\", \"Success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Get post\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/${id}`);\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//ADD comment\r\n\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/posts/comment/${postId}`,\r\n      formData,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Comment Added\", \"Success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//DELETE comment\r\n\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId,\r\n    });\r\n\r\n    dispatch(setAlert(\"Comment Removed\", \"Success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from \"../../actions/post\";\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <div class=\"post-form\">\r\n      <div class=\"bg-primary p\">\r\n        <h3>Say Something...</h3>\r\n      </div>\r\n      <form\r\n        class=\"form my-1\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addPost({ text });\r\n          setText(\"\");\r\n        }}\r\n      >\r\n        <textarea\r\n          name=\"text\"\r\n          cols=\"30\"\r\n          rows=\"5\"\r\n          placeholder=\"Create a post\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input type=\"submit\" class=\"btn btn-dark my-1\" value=\"Submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"../layout/spinner\";\r\nimport { getPosts } from \"../../actions/post\";\r\nimport PostItem from \"./PostItem\";\r\nimport PostForm from \"./PostForm\";\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Posts</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fs-user\"></i>Welcome to the Community\r\n      </p>\r\n      <PostForm />\r\n      <div className=\"posts\">\r\n        {posts.map((post) => (\r\n          <PostItem key={post._id} post={post} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addComment } from \"../../actions/post\";\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <div class=\"post-form\">\r\n      <div class=\"bg-primary p\">\r\n        <h3>Leave a Comment</h3>\r\n      </div>\r\n      <form\r\n        class=\"form my-1\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addComment(postId, { text });\r\n          setText(\"\");\r\n        }}\r\n      >\r\n        <textarea\r\n          name=\"text\"\r\n          cols=\"30\"\r\n          rows=\"5\"\r\n          placeholder=\"Create a post\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input type=\"submit\" class=\"btn btn-dark my-1\" value=\"Submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { deleteComment } from \"../../actions/post\";\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment,\r\n}) => {\r\n  return (\r\n    <div class=\"post bg-white p-1 my-1\">\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          <img class=\"round-img\" src={avatar} alt=\"\" />\r\n          <h4>{name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p class=\"my-1\">{text}</p>\r\n        <p class=\"post-date\">\r\n          Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n        </p>\r\n        {!auth.loading && user === auth.user._id && (\r\n          <button\r\n            onClick={(e) => deleteComment(postId, _id)}\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.number.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/spinner\";\r\nimport { getPost } from \"../../actions/post\";\r\nimport PostItem from \"../posts/PostItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport CommentItem from \"./CommentItem\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { get } from \"mongoose\";\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost]);\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to=\"/posts\" className=\"btn\">\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className=\"comments\">\r\n        {post.comments.map((comment) => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n        profile: null,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false,\r\n      };\r\n\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false,\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== payload),\r\n        loading: false,\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false,\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        loading: false,\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment._id !== payload\r\n          ),\r\n        },\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport auth from \"./auth\";\r\nimport profile from \"./profile\";\r\nimport post from \"./post\";\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n  profile,\r\n  post,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Login from \"./components/Auth/Login\";\nimport Register from \"./components/Auth/Register\";\nimport Alert from \"./components/layout/Alert\";\nimport Dashboard from \"./components/dashboard/dashboard\";\nimport PrivateRoute from \"./components/routing/Privaterouting\";\nimport CreateProfile from \"./components/profile-form/CreateProfile\";\nimport EditProfile from \"./components/profile-form/EditProfile\";\nimport AddExperience from \"./components/profile-form/AddExperience\";\nimport AddEducation from \"./components/profile-form/AddEducation\";\nimport Profiles from \"./components/profiles/Profiles\";\nimport Profile from \"./components/profile/Profile\";\nimport Posts from \"./components/posts/Posts\";\nimport Post from \"./components/post/Post\";\n\n//Redux\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from \"./actions/auth\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path=\"/\" component={Landing} />\n          <section className=\"container\">\n            <Alert />\n            <Switch>\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/Login\" component={Login} />s\n              <Route exact path=\"/profiles\" component={Profiles} />\n              <Route exact path=\"/profile/:id\" component={Profile} />\n              <PrivateRoute exact path=\"/Dashboard\" component={Dashboard} />\n              <PrivateRoute\n                exact\n                path=\"/create-profile\"\n                component={CreateProfile}\n              />\n              <PrivateRoute\n                exact\n                path=\"/edit-profile\"\n                component={EditProfile}\n              />\n              <PrivateRoute\n                exact\n                path=\"/add-experience\"\n                component={AddExperience}\n              />\n              <PrivateRoute\n                exact\n                path=\"/add-education\"\n                component={AddEducation}\n              />\n              <PrivateRoute exact path=\"/posts\" component={Posts} />\n              <PrivateRoute exact path=\"/posts/:id\" component={Post} />\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}